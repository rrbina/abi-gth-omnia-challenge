version: '3.8'

services:
  postgres:
    image: postgres:17.5-alpine3.22
    container_name: postgres_developerstore
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_developerstore
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest	
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq	  
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping && rabbitmqctl await_startup >/dev/null 2>&1"]
      interval: 3s
      timeout: 5s
      retries: 15


  mongodb:
    image: mongo:7.0
    container_name: mongodb_developerstore
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    volumes:
      - mongodb_data:/data/db

  developerstore-api:
    build:
      context: ../Backend/src
      dockerfile: ../../docker/Dockerfile.api
    container_name: api_developerstore
    environment:
      ASPNETCORE_URLS: http://+:5100
    ports:
      - 5100:5100
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  developerstore-consumer:
    build:
      context: ../Backend/src
      dockerfile: ../../docker/Dockerfile.consumer
    container_name: consumer_developerstore
    environment:
      ASPNETCORE_URLS: http://+:5000
    ports:
      - 5000:5000
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started

  angular:
    build:
      context: ../Frontend
      dockerfile: ../docker/Dockerfile.angular
    container_name: angular_developerstore
    ports:
      - 4200:80
    volumes:
      - ../Frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro 
    depends_on:
      postgres:
        condition: service_started
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      developerstore-api:
        condition: service_started
      developerstore-consumer:
        condition: service_started

volumes:
  postgres_data:
  rabbitmq_data:  
  mongodb_data: